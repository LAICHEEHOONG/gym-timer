{"version":3,"sources":["Components/gymNav.jsx","Components/timer.jsx","Components/count.jsx","Components/gymCount-body.jsx","Components/footer.jsx","Components/done.mp3","App.js","index.js"],"names":["GymNav","props","textInput","React","createRef","this","s","setTimer","Navbar","bg","expand","Brand","className","href","Toggle","aria-controls","Collapse","id","Form","FormControl","ref","type","placeholder","aria-label","onChange","event","target","value","Button","variant","onClick","e","current","Component","memo","Timer","timer","ms","Count","count","style","marginLeft","fontSize","GymCountTimer","Footer","run","reset","percent","display","size","ProgressBar","animated","now","label","Math","floor","App","state","second","setState","preventDefault","runTimer","setNum","timerInterval","setInterval","console","log","Audio","sound","play","clearInterval","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAKMA,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,UAAYC,IAAMC,YAHR,E,0CAMnB,WAAU,IAAD,OAGL,EAAqBC,KAAKJ,MAApBK,EAAN,EAAMA,EAAGC,EAAT,EAASA,SAET,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,UAAU,gBAAgBC,KAAK,IAA7C,uBACA,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,iBAC7B,cAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,eAApB,SAEI,eAACC,EAAA,EAAD,CAAMN,UAAU,SAAhB,UACI,cAACO,EAAA,EAAD,CACIC,IAAKf,KAAKH,UACVmB,KAAK,SACLC,YAAY,UACZV,UAAU,kBACVW,aAAW,QACXC,SAAU,SAACC,GAEP,OADAnB,EAAImB,EAAMC,OAAOC,SAIzB,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBACZC,QAAS,SAACC,GACNxB,EAASwB,EAAGzB,GACZ,EAAKJ,UAAU8B,QAAQL,MAAQ,IAHvC,mC,GA/BHM,aA6CN9B,MAAM+B,KAAKlC,GC5CpBmC,G,MAAQ,SAAC,GAAsB,IAAD,IAApBC,MAAQ9B,EAAY,EAAZA,EAAG+B,EAAS,EAATA,GAGvB,OACI,gCACI,sBAAMzB,UAAU,UAAhB,SAA2BN,IAC3B,qCACA,uBAAMM,UAAU,cAAhB,gBAAkCyB,UAM/BlC,MAAM+B,KAAKC,GCfpBG,G,MAAQ,SAAC,GAA0B,IAAfC,EAAc,EAAvBH,MAASG,MACtB,OACI,sBAAK3B,UAAU,QACf4B,MAAO,CAACC,WAAY,OADpB,UAEEF,EAAM,sBAAMC,MAAO,CAACE,SAAU,QAAxB,wBAIDvC,MAAM+B,KAAKI,GCNpBK,EAAgB,SAAC,GAAe,IAAbP,EAAY,EAAZA,MAGrB,OACA,qCACI,qBAAKxB,UAAU,gCAAf,SACI,cAAC,EAAD,CAAOwB,MAAOA,MAGlB,qBAAKxB,UAAU,gCAAf,SACI,cAAC,EAAD,CAAOwB,MAAOA,UAOXjC,MAAM+B,KAAKS,G,QCjBpBC,G,MAAS,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAInC,OACI,qCACI,sBAAKpC,UAAU,uCAAf,UACI,cAACgB,EAAA,EAAD,CAAQqB,KAAK,KAAKrC,UAAU,cAAciB,QAAQ,UAAUW,MAAO,CAAEQ,QAAQ,GAAD,OAAKA,IAAalB,QAASe,EAAvG,mBACA,cAACjB,EAAA,EAAD,CAAQqB,KAAK,KAAKrC,UAAU,cAAciB,QAAQ,SAASC,QAASgB,EAApE,sBAEJ,cAACI,EAAA,EAAD,CAAaC,UAAQ,EAACC,IAAKL,EAASM,MAAK,UAAKC,KAAKC,MAAMR,GAAhB,YAKtC5C,MAAM+B,KAAKU,GCrBX,MAA0B,iCCSnCY,E,4MAEFC,MAAQ,CACJnD,EAAG,EACH+B,GAAI,EACJE,MAAO,EACPQ,QAAS,IACTC,QAAS,gB,EAGbzC,SAAW,SAACkB,EAAOiC,GAEf,EAAKC,SAAS,CACVrD,EAAGgD,KAAKC,MAAMG,KAElBjC,EAAMmC,kB,EAGVC,SAAW,WACP,GAAqB,IAAjB,EAAKJ,MAAMnD,EAAf,CAKA,EAAKqD,SAAS,CAAEZ,QAAS,IAAKC,QAAS,SAEvC,IAAIc,EAAS,EAAKL,MAAMnD,EAEpByD,EAAgBC,aAAY,YAC5B,EAAKL,SAAS,CAAEtB,GAAI,EAAKoB,MAAMpB,GAAK,IAEpC4B,QAAQC,IAAI,EAAKT,MAAMpB,IAEnB,EAAKoB,MAAMpB,GAAK,IAChB,EAAKsB,SAAS,CAAEtB,GAAI,IACpB,EAAKsB,SAAS,CACVrD,EAAG,EAAKmD,MAAMnD,EAAI,EAClByC,QAAS,EAAKU,MAAMV,QAAU,IAAMe,KAQvB,IAAjB,EAAKL,MAAMnD,KACC,IAAI6D,MAAMC,GAChBC,OACNC,cAAcP,GACd,EAAKJ,SAAS,CACVrD,EAAGwD,EACHvB,MAAO,EAAKkB,MAAMlB,MAAQ,EAC1BS,QAAS,oBAIlB,UApCCuB,MAAM,wB,EAwCdzB,MAAQ,WACJ,EAAKa,SAAS,CACVrD,EAAG,EACH+B,GAAI,EACJE,MAAO,EACPQ,QAAS,O,4CAOjB,WAGI,OACI,gCACI,cAAC,EAAD,CAAQzC,EAAGD,KAAKoD,MAAMnD,EAAGC,SAAUF,KAAKE,WACxC,cAAC,EAAD,CAAe6B,MAAO/B,KAAKoD,QAC3B,cAAC,EAAD,CAAQZ,IAAKxC,KAAKwD,SACdf,MAAOzC,KAAKyC,MACZC,QAAS1C,KAAKoD,MAAMV,QACpBC,QAAS3C,KAAKoD,MAAMT,iB,GAlFtBf,aAyFH9B,MAAM+B,KAAKsB,G,MC5F1BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.210a7cd6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\n\nimport '../css/gymNav.css';\n\nclass GymNav extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.textInput = React.createRef()\n    }\n\n    render() {\n\n\n        let { s, setTimer} = this.props;\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\"  >\n                <Navbar.Brand className='navbar-brand ' href=\"#\">Gym Timer</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                <Navbar.Collapse id=\"navbarScroll\" >\n\n                    <Form className=\"d-flex\">\n                        <FormControl\n                            ref={this.textInput}\n                            type=\"number\"\n                            placeholder=\"Seconds\"\n                            className=\"mr-2 search-bar\"\n                            aria-label=\"Timer\"\n                            onChange={(event) => {\n                                s = event.target.value;\n                                return s\n                            }}\n                        />\n                        <Button variant=\"outline-success\"\n                            onClick={(e) => {\n                                setTimer(e, s)\n                                this.textInput.current.value = '';\n                            }}\n\n                        >Set Timer</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default React.memo(GymNav);","import React from 'react';\n\n\n\nimport '../css/timer.css'\n\nconst Timer = ({timer: {s, ms}}) => {\n\n\n    return (\n        <div>\n            <span className='seconds'>{s}</span>\n            <span>s</span>\n            <span className='millisecond'>   {ms}</span>\n           \n        </div>\n    )\n}\n\nexport default React.memo(Timer);","import React from 'react';\n\nimport '../css/count.css';\n\nconst Count = ({ timer: { count } }) => {\n    return (\n        <div className='count'\n        style={{marginLeft: '9px'}}\n        >{count}<span style={{fontSize: '1rem'}} >Times</span></div>\n    )\n}\n\nexport default React.memo(Count);","import React from 'react';\n\nimport Timer from './timer';\nimport Count from './count';\n\n\nconst GymCountTimer = ({ timer }) => {\n\n\n    return (\n    <>\n        <div className='d-flex justify-content-center'>\n            <Timer timer={timer} />\n        </div>\n        \n        <div className='d-flex justify-content-center'>\n            <Count timer={timer}/>\n        </div>\n    </>\n    )\n\n}\n\nexport default React.memo(GymCountTimer);\n","import React from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\n\n\nimport '../css/footer.css';\n\nconst Footer = ({ run, reset, percent, display }) => {\n\n\n\n    return (\n        <>\n            <div className='d-flex justify-content-center footer'>\n                <Button size=\"lg\" className='control-btn' variant=\"success\" style={{ display: `${display}` }} onClick={run} >START</Button>\n                <Button size=\"lg\" className='control-btn' variant=\"danger\" onClick={reset}>RESET</Button>\n            </div>\n            <ProgressBar animated now={percent} label={`${Math.floor(percent)}%`} />\n        </>\n    )\n}\n\nexport default React.memo(Footer);","export default __webpack_public_path__ + \"static/media/done.33e69535.mp3\";","import React, { Component } from 'react';\n\nimport GymNav from './Components/gymNav';\nimport GymCountTimer from './Components/gymCount-body';\nimport Footer from './Components/footer';\n\nimport sound from './Components/done.mp3';\n\n\nclass App extends Component {\n\n    state = {\n        s: 0,\n        ms: 0,\n        count: 0,\n        percent: 100,\n        display: 'inline-block'\n    }\n\n    setTimer = (event, second) => {\n\n        this.setState({\n            s: Math.floor(second)\n        })\n        event.preventDefault();\n    }\n\n    runTimer = () => {\n        if (this.state.s === 0) {\n            alert('Please set timer...');\n            return;\n        }\n\n        this.setState({ percent: 100, display: 'none' })\n\n        let setNum = this.state.s;\n\n        let timerInterval = setInterval(() => {\n            this.setState({ ms: this.state.ms + 1 })\n\n            console.log(this.state.ms)\n\n            if (this.state.ms > 9) {\n                this.setState({ ms: 0 })\n                this.setState({\n                    s: this.state.s - 1,\n                    percent: this.state.percent - 100 / setNum\n\n                })\n\n             \n\n            }\n\n            if (this.state.s === 0) {\n                let audio = new Audio(sound)\n                audio.play();\n                clearInterval(timerInterval)\n                this.setState({\n                    s: setNum,\n                    count: this.state.count + 1,\n                    display: 'inline-block'\n                })\n            }\n\n        }, 100)\n\n    }\n\n    reset = () => {\n        this.setState({\n            s: 0,\n            ms: 0,\n            count: 0,\n            percent: 100\n        })\n    }\n\n\n\n\n    render() {\n\n\n        return (\n            <div>\n                <GymNav s={this.state.s} setTimer={this.setTimer} />\n                <GymCountTimer timer={this.state} />\n                <Footer run={this.runTimer}\n                    reset={this.reset}\n                    percent={this.state.percent}\n                    display={this.state.display}\n                />\n            </div>\n        )\n    }\n}\n\nexport default React.memo(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n\n//npm run build\n//npm run deploy\n//git add .\n//git commit -m\n//git push origin main"],"sourceRoot":""}