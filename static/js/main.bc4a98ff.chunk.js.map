{"version":3,"sources":["Components/done.mp3","context/index.js","Components/gymNav.jsx","Components/timer.jsx","Components/count.jsx","Components/gymCount-body.jsx","Components/footer.jsx","App.js","index.js"],"names":["GymContext","React","createContext","GymProvider","state","s","ms","count","percent","display","setTimer","event","second","preventDefault","parseInt","notify","setState","Math","floor","runTimer","setNum","audio","Audio","sound","timerInterval","setInterval","play","clearInterval","reset","text","toast","error","position","POSITION","TOP_CENTER","autoClose","Provider","value","this","props","children","Component","GymNav","textInput","createRef","Navbar","bg","expand","Brand","className","href","Toggle","aria-controls","Collapse","id","Form","FormControl","ref","type","placeholder","aria-label","onChange","context","target","Button","variant","onClick","e","current","contextType","memo","Timer","useContext","Count","style","marginLeft","fontSize","GymCountTimer","Footer","size","CSSTransition","in","percentageToBool","timeout","classNames","ProgressBar","animated","now","label","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc4a98ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/done.33e69535.mp3\";","import React, { Component } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport sound from '../Components/done.mp3';\n\nconst GymContext = React.createContext();\n\nclass GymProvider extends Component {\n\n    state = {\n        s: 0,\n        ms: 0,\n        count: 0,\n        percent: 100,\n        display: 'inline-block'\n    }\n\n    setTimer = (event, second) => {\n        event.preventDefault();\n\n        if (parseInt(second) < 0) {\n            this.notify('Not allow negative number')\n            // alert('Not allow number...')\n            this.setState({ s: 0 })\n            return;\n        }\n\n        if (parseInt(second) === 0) {\n            this.notify('Cannot be zero')\n            // alert('Not allow number...')\n            this.setState({ s: 0 })\n            return;\n        }\n\n        this.setState({\n            s: Math.floor(second)\n        })\n\n    }\n\n    runTimer = () => {\n\n        if (this.state.s === 0) {\n            this.notify('Please set timer...')\n            return;\n        }\n\n        this.setState({ percent: 100, display: 'none' })\n\n        let setNum = this.state.s;\n        let audio = new Audio(sound)\n\n        let timerInterval = setInterval(() => {\n            this.setState({ ms: this.state.ms + 1 })\n\n\n\n            if (this.state.ms > 9) {\n                this.setState({ ms: 0 })\n                this.setState({\n                    s: this.state.s - 1,\n                    percent: this.state.percent - 100 / setNum\n\n                })\n            }\n\n            if (this.state.s === 0) {\n\n                audio.play();\n                clearInterval(timerInterval)\n                this.setState({\n                    s: setNum,\n                    count: this.state.count + 1,\n                    display: 'inline-block'\n                })\n            }\n\n        }, 100)\n\n    }\n\n    reset = () => {\n        this.setState({\n            s: 0,\n            ms: 0,\n            count: 0,\n            percent: 100\n        })\n    }\n\n    notify = (text) => {\n        toast.error(text, {\n            position: toast.POSITION.TOP_CENTER,\n            autoClose: 2000\n        });\n    }\n\n    render() {\n\n        return (\n            <>\n                <ToastContainer />\n                <GymContext.Provider\n                    value={{\n                        state: this.state,\n                        setTimer: this.setTimer,\n                        runTimer: this.runTimer,\n                        reset: this.reset\n                    }}>\n                    {this.props.children}\n                </GymContext.Provider>\n            </>\n        )\n    }\n}\n\nexport { GymContext, GymProvider }","import React, { Component } from 'react';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\n\n\nimport {GymContext} from '../context/index'\n\nimport '../css/gymNav.css';\n\nclass GymNav extends Component {\n\n    static contextType = GymContext\n\n    constructor(props) {\n        super(props)\n\n        this.textInput = React.createRef()\n    }\n\n    render() {\n\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\"  >\n                <Navbar.Brand className='navbar-brand ' href=\"#\">Gym Timer</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                <Navbar.Collapse id=\"navbarScroll\" >\n\n                    <Form className=\"d-flex\">\n                        <FormControl\n                            ref={this.textInput}\n                            type=\"number\"\n                            placeholder=\"Seconds\"\n                            className=\"mr-2 search-bar\"\n                            aria-label=\"Timer\"\n                            onChange={(event) => {\n                                this.context.state.s = event.target.value;\n                                return this.context.state.s \n                            }}\n                        />\n                        <Button variant=\"outline-success\"\n                            onClick={(e) => {\n                                this.context.setTimer(e, this.context.state.s )\n                                this.textInput.current.value = '';\n                            }}\n\n                        >Set Timer</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default React.memo(GymNav);","import React, {useContext} from 'react';\n\nimport {GymContext} from '../context'\n\nimport '../css/timer.css'\n\nconst Timer = () => {\n\n    let context = useContext(GymContext)\n    return (\n        <div>\n            <span className='seconds'>{context.state.s}</span>\n            <span>s</span>\n            <span className='millisecond'>   {context.state.ms}</span>\n        </div>\n    )\n}\n\nexport default React.memo(Timer);","import React, {useContext} from 'react';\n\nimport {GymContext} from '../context'\n\n\nimport '../css/count.css';\n\nconst Count = () => {\n\n    let context = useContext(GymContext)\n\n    return (\n        <div className='count'\n        style={{marginLeft: '9px'}}\n        >{context.state.count}<span style={{fontSize: '1rem'}} >Times</span></div>\n    )\n}\n\nexport default React.memo(Count);\n\n","import React from 'react';\n\nimport Timer from './timer';\nimport Count from './count';\n\n\nconst GymCountTimer = () => {\n\n    return (\n    <>\n        <div className='d-flex justify-content-center'>\n            <Timer  />\n        </div>\n        \n        <div className='d-flex justify-content-center'>\n            <Count />\n        </div>\n    </>\n    )\n\n}\n\nexport default React.memo(GymCountTimer);\n","import React, { useContext } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport { GymContext } from '../context'\nimport { CSSTransition } from 'react-transition-group';\n\n\nimport '../css/footer.css';\n\nconst Footer = () => {\n\n    let context = useContext(GymContext)\n\n    // const [click, setClick] = useState(false)\n\n    const percentageToBool = () => {\n        let percent = context.state.percent;\n        if(percent === 100 || percent <= 0) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    ;\n\n    return (\n        <>\n            <div className='d-flex justify-content-center footer'>\n                <Button size=\"lg\" className='control-btn' variant=\"success\" style={{ display: `${context.state.display}` }} onClick={context.runTimer} >START</Button>\n                <Button size=\"lg\" className='control-btn' variant=\"danger\" onClick={context.reset}>RESET</Button>\n            </div>\n\n            <CSSTransition in={percentageToBool()} timeout={1000} classNames='progress-bar'>\n                <ProgressBar animated now={context.state.percent} label={`${Math.floor(context.state.percent)}%`} />\n            </CSSTransition>\n\n        </>\n    )\n}\n\nexport default React.memo(Footer);","import React from 'react';\n\nimport {GymProvider} from './context'\n\nimport GymNav from './Components/gymNav';\nimport GymCountTimer from './Components/gymCount-body';\nimport Footer from './Components/footer';\n\n\n\n\nconst App = () => {\n\n\n        return (\n            <GymProvider>\n                <GymNav/>\n                <GymCountTimer/>\n                <Footer/> \n            </GymProvider>\n        )\n    \n}\n\nexport default React.memo(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n\n//npm run build\n//npm run deploy\n//git add .\n//git commit -m\n//git push origin main"],"sourceRoot":""}